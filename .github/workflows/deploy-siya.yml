name: Deploy SIYA

on:
  push:
    branches:
      - main
        
jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Deploy SIYA
    env:
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      PLANET_SCALE_DB_URL: ${{ secrets.PLANET_SCALE_DB_URL }}
      
    steps:
      - uses: actions/checkout@v3
        
      - name: Restore cache
        id: restore-cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-restore-cache-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-restore-cache-
          
      - name: Install dependencies
        id: install-dependencies
        if: steps.restore-cache.outputs.cache-hit != 'true'
        run: |
          npm run setup
          
      - name: Run Prisma migrations
        id: run-prisma-migrations
        run: |
          npx prisma db push --schema=packages/prisma-data-proxy/prisma/schema.prisma
          npx prisma generate --schema=packages/prisma-data-proxy/prisma/schema.prisma --data-proxy
        
      - name: Deploy Slack bot
        id: deploy-slack-bot
        uses: cloudflare/wrangler-action@2.0.0
        with:
          wranglerVersion: '3.0.0'
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: packages/slack-bot
          command: deploy
          secrets: |
            DATABASE_URL
            SLACK_CLIENT_SECRET
            SLACK_SIGNING_SECRET
            SENTRY_DSN
        env:
          SLACK_CLIENT_SECRET: ${{ secrets.SLACK_CLIENT_SECRET }}
          SLACK_SIGNING_SECRET: ${{ secrets.SLACK_SIGNING_SECRET }}
          
      - name: Deploy Atlassian bot
        id: deploy-atlassian-bot
        uses: cloudflare/wrangler-action@2.0.0
        with: 
          wranglerVersion: '3.0.0'
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          workingDirectory: packages/atlassian-bot
          command: deploy
          secrets: |
            DATABASE_URL
            SENTRY_DSN
            
      - name: Build Siya site
        id: build-siya-site
        run: |
          cd packages/siya-site
          npm run build
          
      - name: Deploy Siya site
        id: deploy-site
        uses: cloudflare/pages-action@v1
        with: 
          wranglerVersion: '3'
          projectName: siya-site
          branch: main
          directory: out
          workingDirectory: packages/siya-site
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          
